"""
Django settings for hyperwave project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config, Csv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Generate a new secure key for production
SECRET_KEY = config('SECRET_KEY', default='django-secure-hyperwave-2025-k3ny@-n3tw0rk5-$3cur3-r@nd0m-k3y-f0r-pr0duct10n-v2')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='hyperwave.co.ke,www.hyperwave.co.ke,127.0.0.1,localhost', cast=Csv())

# Security: Additional host validation
ALLOWED_HOSTS_STRICT = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',  # For SEO sitemap
    'core.apps.CoreConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # For static files in production
    'core.middleware.SecurityMiddleware',  # Custom security middleware - moved up for early protection
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'core.middleware.AdminSecurityMiddleware',  # Admin security middleware
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hyperwave.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.seo_context',  # Custom SEO context
            ],
        },
    },
]

WSGI_APPLICATION = 'hyperwave.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        'OPTIONS': {
            'timeout': 20,  # Prevent database locks
        }
    }
}

# Database security settings
DATABASE_OPTIONS = {
    'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
    'charset': 'utf8mb4',
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 14,  # Increased minimum length for better security
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Custom password validation
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',  # Most secure hasher
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

# Session security
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'  # More secure than pure cache
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Nairobi'  # Updated to Kenya timezone

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email settings for cPanel hosting
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', default='mail.hyperwave.co.ke')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_TIMEOUT = 30
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='info@hyperwave.co.ke')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='Hyp3rw@V3N3t')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='info@hyperwave.co.ke')
SERVER_EMAIL = config('SERVER_EMAIL', default='info@hyperwave.co.ke')

# COMPREHENSIVE SECURITY SETTINGS
# ================================

# HTTPS Settings - Force HTTPS in production
SECURE_SSL_REDIRECT = config('SECURE_SSL_REDIRECT', default=True, cast=bool)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# HTTP Strict Transport Security (HSTS)
SECURE_HSTS_SECONDS = config('SECURE_HSTS_SECONDS', default=31536000, cast=int)  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = config('SECURE_HSTS_INCLUDE_SUBDOMAINS', default=True, cast=bool)
SECURE_HSTS_PRELOAD = config('SECURE_HSTS_PRELOAD', default=True, cast=bool)

# Content Security Policy and Security Headers
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'  # Prevent clickjacking
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

# Additional security headers
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin'
SECURE_PERMISSIONS_POLICY = {
    'accelerometer': [],
    'camera': [],
    'geolocation': [],
    'gyroscope': [],
    'magnetometer': [],
    'microphone': [],
    'payment': [],
    'usb': [],
}

# Cookie Security
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_SECURE', default=True, cast=bool)
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Strict'  # Stricter than 'Lax' for better security
SESSION_COOKIE_AGE = 3600  # 1 hour session timeout

CSRF_COOKIE_SECURE = config('CSRF_COOKIE_SECURE', default=True, cast=bool)
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Strict'
CSRF_COOKIE_AGE = 3600  # 1 hour

# CSRF Protection Enhancement
CSRF_FAILURE_VIEW = 'core.views.csrf_failure'
CSRF_TRUSTED_ORIGINS = ['https://hyperwave.co.ke', 'https://www.hyperwave.co.ke']

# File Upload Security
FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # 2.5MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 2621440  # 2.5MB
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100  # Reduced from 1000
FILE_UPLOAD_PERMISSIONS = 0o644

# Allowed file types for uploads
ALLOWED_UPLOAD_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif', '.pdf', '.doc', '.docx']
MAX_UPLOAD_SIZE = 2621440  # 2.5MB

# Admin Security
ADMIN_URL = config('ADMIN_URL', default='secure-admin-hyperwave-2025/')
ADMIN_FORCE_ALLAUTH = False
ADMIN_LOGIN_ATTEMPTS_LIMIT = 3
ADMIN_LOGIN_ATTEMPTS_TIMEOUT = 3600  # 1 hour lockout

# Rate Limiting and DDoS Protection
RATELIMIT_ENABLE = config('RATELIMIT_ENABLE', default=True, cast=bool)
RATELIMIT_USE_CACHE = 'default'
RATELIMIT_VIEW = 'core.views.ratelimited'

# Cache Configuration with security considerations
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'hyperwave-cache',
        'TIMEOUT': 300,  # 5 minutes
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
            'CULL_FREQUENCY': 3,
        }
    }
}

# Logging Configuration with Security Focus
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'security': {
            'format': 'SECURITY {levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
            'formatter': 'verbose',
        },
        'security_file': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs' / 'security.log',
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
            'formatter': 'security',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.security': {
            'handlers': ['security_file'],
            'level': 'WARNING',
            'propagate': False,
        },
        'core': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['security_file'],
            'level': 'ERROR',
            'propagate': False,
        },
    },
}

# Content Security Policy (CSP)
CSP_DEFAULT_SRC = ["'self'"]
CSP_SCRIPT_SRC = ["'self'", "'unsafe-inline'", "https://cdnjs.cloudflare.com", "https://cdn.jsdelivr.net"]
CSP_STYLE_SRC = ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com", "https://cdnjs.cloudflare.com"]
CSP_FONT_SRC = ["'self'", "https://fonts.gstatic.com"]
CSP_IMG_SRC = ["'self'", "data:", "https:"]
CSP_CONNECT_SRC = ["'self'"]
CSP_FRAME_SRC = ["'none'"]
CSP_OBJECT_SRC = ["'none'"]
CSP_BASE_URI = ["'self'"]
CSP_FORM_ACTION = ["'self'"]

# IP Whitelisting for admin (optional - uncomment and configure for production)
# ADMIN_IP_WHITELIST = ['127.0.0.1', '::1']  # Add your admin IPs

# Honeypot settings (trap for bots)
HONEYPOT_FIELD_NAME = 'website_url'  # Hidden field name
HONEYPOT_VALUE = ''

# SEO Settings
# ============
SITE_ID = 1
SITE_NAME = 'Hyperwave Networks'
SITE_DESCRIPTION = 'Leading provider of internet solutions, network infrastructure, and security systems in Kenya'
SITE_KEYWORDS = 'internet solutions Kenya, network infrastructure Nairobi, CCTV installation, fiber internet, wireless internet, ICT consultancy'

# Development vs Production Settings
if DEBUG:
    # Development settings - more permissive for testing
    SECURE_SSL_REDIRECT = False
    SECURE_HSTS_SECONDS = 0
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    
    # Use file-based email backend for development
    EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
    EMAIL_FILE_PATH = 'logs/emails'
    
    # Add development-specific allowed hosts
    ALLOWED_HOSTS.extend(['127.0.0.1', 'localhost', '0.0.0.0'])
    
else:
    # Production settings - maximum security
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    # Secure cookies in production
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    
    # Use real SMTP in production
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    
    # Additional production security
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    
    # Database backup settings (implement with your backup solution)
    # DATABASE_BACKUP_ENABLED = True
    # DATABASE_BACKUP_SCHEDULE = '0 2 * * *'  # Daily at 2 AM

# Override for local development testing
if config('LOCAL_DEVELOPMENT', default=False, cast=bool):
    DEBUG = True
    SECURE_SSL_REDIRECT = False
    SECURE_HSTS_SECONDS = 0
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False

# Security Monitoring and Alerting
SECURITY_MONITORING = {
    'FAILED_LOGIN_THRESHOLD': 5,
    'FAILED_LOGIN_WINDOW': 300,  # 5 minutes
    'SUSPICIOUS_REQUEST_THRESHOLD': 10,
    'SUSPICIOUS_REQUEST_WINDOW': 60,  # 1 minute
    'EMAIL_ALERTS': True,
    'ALERT_RECIPIENTS': ['admin@hyperwave.co.ke'],
}

# Backup and Recovery Settings
BACKUP_SETTINGS = {
    'ENABLED': not DEBUG,
    'SCHEDULE': '0 2 * * *',  # Daily at 2 AM
    'RETENTION_DAYS': 30,
    'ENCRYPTION_ENABLED': True,
}

# Performance and Security Optimization
SECURE_PERFORMANCE = {
    'ENABLE_GZIP': True,
    'ENABLE_CACHING': True,
    'CACHE_TIMEOUT': 300,  # 5 minutes
    'STATIC_FILE_CACHING': True,
}

# Additional security middleware settings
SECURITY_MIDDLEWARE_SETTINGS = {
    'BLOCK_SUSPICIOUS_USER_AGENTS': True,
    'BLOCK_TOR_EXITS': False,  # Set to True if you want to block Tor
    'ENABLE_GEOBLOCKING': False,  # Set to True and configure countries to block
    'BLOCKED_COUNTRIES': [],  # ISO country codes to block
    'ENABLE_REPUTATION_CHECKING': True,
}

# Force HTTPS redirect for specific paths
SECURE_REDIRECT_EXEMPT = []  # Paths that don't need HTTPS redirect

# Custom error pages
CUSTOM_ERROR_PAGES = {
    '400': 'errors/400.html',
    '403': 'errors/403.html', 
    '404': 'errors/404.html',
    '500': 'errors/500.html',
    '502': 'errors/502.html',
    '503': 'errors/503.html',
}
