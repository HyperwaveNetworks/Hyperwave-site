"""
Django settings for hyperwave project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config, Csv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-change-this-in-production-k9l#m2@3$4%5^6&7*8(9)0-=+[]{};:|<>?/')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1', cast=Csv())


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',  # For SEO sitemap
    'core.apps.CoreConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # For static files in production
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'core.middleware.SecurityMiddleware',  # Custom security middleware
    'core.middleware.AdminSecurityMiddleware',  # Admin security middleware
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hyperwave.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.seo_context',  # Custom SEO context
            ],
        },
    },
]

WSGI_APPLICATION = 'hyperwave.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 12,  # Increased minimum length
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Nairobi'  # Updated to Kenya timezone

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email settings for cPanel hosting
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', default='mail.hyperwave.co.ke')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_TIMEOUT = 30
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='info@hyperwave.co.ke')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='Hyp3rw@V3N3t')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='info@hyperwave.co.ke')
SERVER_EMAIL = config('SERVER_EMAIL', default='info@hyperwave.co.ke')

# SECURITY SETTINGS
# =================

# HTTPS Settings
SECURE_SSL_REDIRECT = config('SECURE_SSL_REDIRECT', default=False, cast=bool)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Security Headers - Enhanced
SECURE_HSTS_SECONDS = config('SECURE_HSTS_SECONDS', default=31536000, cast=int)  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = config('SECURE_HSTS_INCLUDE_SUBDOMAINS', default=True, cast=bool)
SECURE_HSTS_PRELOAD = config('SECURE_HSTS_PRELOAD', default=True, cast=bool)

# Content Security Policy
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'

# Cookie Security - Enhanced
SESSION_COOKIE_SECURE = config('SESSION_COOKIE_SECURE', default=True, cast=bool)
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Strict'
SESSION_COOKIE_AGE = 43200  # 12 hours (reduced from 24)
SESSION_COOKIE_NAME = 'hyperwave_sessionid'  # Custom name for security

CSRF_COOKIE_SECURE = config('CSRF_COOKIE_SECURE', default=True, cast=bool)
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Strict'
CSRF_COOKIE_NAME = 'hyperwave_csrftoken'  # Custom name for security
CSRF_FAILURE_VIEW = 'core.views.csrf_failure'

# Additional Security Settings
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin'

# File Upload Security - Enhanced
FILE_UPLOAD_MAX_MEMORY_SIZE = 2097152  # 2MB (reduced from 5MB)
DATA_UPLOAD_MAX_MEMORY_SIZE = 2097152  # 2MB (reduced from 5MB)
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100    # Reduced from 1000
FILE_UPLOAD_PERMISSIONS = 0o644

# Allowed file types for uploads
ALLOWED_UPLOAD_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif', '.pdf', '.doc', '.docx']
MAX_UPLOAD_SIZE = 2097152  # 2MB

# Admin URL Security
ADMIN_URL = config('ADMIN_URL', default='secure-admin-panel/')

# Security Middleware Configuration
SECURITY_MIDDLEWARE_CONFIG = {
    'ENABLE_RATE_LIMITING': True,
    'ENABLE_DDOS_PROTECTION': True,
    'ENABLE_ADMIN_PROTECTION': True,
    'ENABLE_MALWARE_SCANNING': True,
    'ENABLE_IP_GEOBLOCKING': False,  # Set to True to enable geographic blocking
    'BLOCKED_COUNTRIES': ['CN', 'RU', 'KP'],  # ISO country codes to block
    'WHITELIST_IPS': ['127.0.0.1', '::1'],  # Always allowed IPs
    'MAX_REQUESTS_PER_MINUTE': 60,
    'MAX_REQUESTS_PER_HOUR': 1000,
    'BLOCK_DURATION': 3600,  # 1 hour
}

# Rate Limiting Settings
RATELIMIT_ENABLE = config('RATELIMIT_ENABLE', default=True, cast=bool)

# Cache Configuration - Enhanced for security
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'hyperwave-security-cache',
        'TIMEOUT': 300,  # 5 minutes
        'OPTIONS': {
            'MAX_ENTRIES': 2000,  # Increased for security tracking
        }
    },
    'security': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'hyperwave-security-tracking',
        'TIMEOUT': 3600,  # 1 hour for security data
        'OPTIONS': {
            'MAX_ENTRIES': 5000,
        }
    }
}

# Logging Configuration - Enhanced Security Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
        'security': {
            'format': '[SECURITY] {levelname} {asctime} {module} - {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
            'formatter': 'verbose',
        },
        'security_file': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs' / 'security.log',
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
            'formatter': 'security',
        },
        'attack_file': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR / 'logs' / 'attacks.log',
            'maxBytes': 1024*1024*10,  # 10MB
            'backupCount': 20,
            'formatter': 'security',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.security': {
            'handlers': ['security_file', 'attack_file'],
            'level': 'WARNING',
            'propagate': False,
        },
        'core': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'security.attacks': {
            'handlers': ['attack_file'],
            'level': 'ERROR',
            'propagate': False,
        },
    },
}

# SEO Settings
# ============
SITE_ID = 1
SITE_NAME = 'Hyperwave Networks'
SITE_DESCRIPTION = 'Leading provider of internet solutions, network infrastructure, and security systems in Kenya'
SITE_KEYWORDS = 'internet solutions Kenya, network infrastructure Nairobi, CCTV installation, fiber internet, wireless internet, ICT consultancy'

# For development - use file-based email backend to save emails locally
if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
    EMAIL_FILE_PATH = 'logs/emails'  # Save emails to logs/emails directory
else:
    # Production - use real SMTP
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Production specific settings
if not DEBUG and not config('LOCAL_DEVELOPMENT', default=False, cast=bool):
    # Force HTTPS in production (but not in local development)
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    # Secure cookies in production
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

# Email backend configuration
# Override to always use SMTP for testing email delivery
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# For development - save emails locally (commented out for email testing)
# if DEBUG:
#     EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
#     EMAIL_FILE_PATH = 'logs/emails'
